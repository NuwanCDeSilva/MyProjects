using System;
using System.Data;

namespace FF.BusinessObjects
{

    //===========================================================================================================
    // This code is generated by Code gen V.1 
    // Computer :- ITPD11  | User :- suneth On 09-Jul-2015 12:06:11
    //===========================================================================================================

    public class ImportsBLHeader
    {
        public Int32 Ib_seq_no { get; set; }
        public String Ib_com { get; set; }
        public String Ib_sbu { get; set; }
        public String Ib_doc_no { get; set; }
        public String Ib_bl_no { get; set; }
        public DateTime Ib_bl_dt { get; set; }
        public bool Ib_clear_pty { get; set; }
        public Int32 Ib_is_cusdec { get; set; }
        public bool Ib_tot_foc { get; set; }
        public String Ib_ref_no { get; set; }
        public String Ib_rmk { get; set; }
        public String Ib_mbl_no { get; set; }
        public String Ib_supp_tp { get; set; }
        public String Ib_supp_cd { get; set; }
        public String Ib_consi_cd { get; set; }
        public String Ib_decl_cd { get; set; }
        public String Ib_agent_tp { get; set; }
        public String Ib_agent_cd { get; set; }
        public String Ib_expo_cnty { get; set; }
        public String Ib_origin_cnty { get; set; }
        public String Ib_desti_cnty { get; set; }
        public String Ib_tot_pkg { get; set; }
        public String Ib_pack_lst_no { get; set; }
        public String Ib_vessel_no { get; set; }
        public String Ib_voyage { get; set; }
        public String Ib_loading_place { get; set; }
        public String Ib_frm_port { get; set; }
        public String Ib_to_port { get; set; }
        public DateTime Ib_etd { get; set; }
        public DateTime Ib_eta { get; set; }
        public String Ib_cur_cd { get; set; }
        public Decimal Ib_ex_rt { get; set; }
        public Decimal Ib_tot_bl_amt { get; set; }
        public String Ib_loc_of_goods { get; set; }
        public DateTime Ib_doc_clear_dt { get; set; }
        public DateTime Ib_doc_rec_dt { get; set; }
        public Int32 Ib_ignore { get; set; }
        public String Ib_anal_1 { get; set; }
        public String Ib_anal_2 { get; set; }
        public String Ib_anal_3 { get; set; }
        public String Ib_anal_4 { get; set; }
        public String Ib_entry_no { get; set; }
        public String Ib_stus { get; set; }
        public String Ib_cre_by { get; set; }
        public DateTime Ib_cre_dt { get; set; }
        public String Ib_mod_by { get; set; }
        public DateTime Ib_mod_dt { get; set; }
        public String Ib_session_id { get; set; }

        //Tharaka 2015-12-02

        public DateTime Ib_doc_hnd_dt { get; set; }
        public String Ib_cusdec_entryno { get; set; }
        public DateTime Ib_act_eta { get; set; }
        public String Ib_bl_ref_no { get; set; }

        public string Ib_tos { get; set; }
        public string Ib_carry_tp { get; set; }

        //Lakshan 03-Mar-2016 
        public Int32 Ib_si_seq_no { get; set; }
        public Int32 Ib_standard_lead { get; set; }
        public Int32 Ib_act_lead { get; set; }

        //Rukshan 17-Jun-2016
        public string Ib_gurr_no { get; set; }
        public DateTime Ib_issue_date { get; set; }
        public DateTime Ib_ex_date { get; set; }
        public DateTime Ib_cancel_date { get; set; }

      
        public Boolean Ib_is_cancel { get; set; }
        //subodana
        public string Ib_mfile_no { get; set; }
        public string Ib_loc_cd { get; set; }

        //Chamal 18-Dec-2015
        #region additional columns

        public String CountryCode { get; set; } 
        public String ConsigneeTin { get; set; }
        public String ConsigneeName { get; set; }
        public String ConsigneeAddress { get; set; }
        public String ConsigneeCurrencyCode { get; set; }

        public String ExporterTin { get; set; }
        public String ExporterCode { get; set; }
        public String ExporterName { get; set; }
        public String ExporterAddress { get; set; }

        public String DeclarantTin { get; set; }
        public String DeclarantCode { get; set; }
        public String DeclarantName { get; set; }
        public String DeclarantAddress { get; set; }
        
        public String ExpCntyName { get; set; }
        public String OriginCntyName { get; set; }
        public String DestiCntyName { get; set; }
        #endregion
        //Lakshan 20Dec2017
        public DateTime IB_CREDALOW_DT { get; set; }
        public static ImportsBLHeader Converter(DataRow row)
        {
            return new ImportsBLHeader
            {
                Ib_seq_no = row["IB_SEQ_NO"] == DBNull.Value ? 0 : Convert.ToInt32(row["IB_SEQ_NO"].ToString()),
                Ib_com = row["IB_COM"] == DBNull.Value ? string.Empty : row["IB_COM"].ToString(),
                Ib_sbu = row["IB_SBU"] == DBNull.Value ? string.Empty : row["IB_SBU"].ToString(),
                Ib_doc_no = row["IB_DOC_NO"] == DBNull.Value ? string.Empty : row["IB_DOC_NO"].ToString(),
                Ib_bl_no = row["IB_BL_NO"] == DBNull.Value ? string.Empty : row["IB_BL_NO"].ToString(),
                Ib_bl_dt = row["IB_BL_DT"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["IB_BL_DT"].ToString()),

                Ib_clear_pty = row["IB_CLEAR_PTY"] == DBNull.Value ? false : Convert.ToBoolean(row["IB_CLEAR_PTY"]),

                Ib_is_cusdec = row["IB_IS_CUSDEC"] == DBNull.Value ? 0 : Convert.ToInt32(row["IB_IS_CUSDEC"].ToString()),

                Ib_tot_foc = row["IB_TOT_FOC"] == DBNull.Value ? false : Convert.ToBoolean(row["IB_TOT_FOC"]),

                Ib_ref_no = row["IB_REF_NO"] == DBNull.Value ? string.Empty : row["IB_REF_NO"].ToString(),
                Ib_rmk = row["IB_RMK"] == DBNull.Value ? string.Empty : row["IB_RMK"].ToString(),
                Ib_mbl_no = row["IB_MBL_NO"] == DBNull.Value ? string.Empty : row["IB_MBL_NO"].ToString(),
                Ib_supp_tp = row["IB_SUPP_TP"] == DBNull.Value ? string.Empty : row["IB_SUPP_TP"].ToString(),
                Ib_supp_cd = row["IB_SUPP_CD"] == DBNull.Value ? string.Empty : row["IB_SUPP_CD"].ToString(),
                Ib_consi_cd = row["IB_CONSI_CD"] == DBNull.Value ? string.Empty : row["IB_CONSI_CD"].ToString(),
                Ib_decl_cd = row["IB_DECL_CD"] == DBNull.Value ? string.Empty : row["IB_DECL_CD"].ToString(),
                Ib_agent_tp = row["IB_AGENT_TP"] == DBNull.Value ? string.Empty : row["IB_AGENT_TP"].ToString(),
                Ib_agent_cd = row["IB_AGENT_CD"] == DBNull.Value ? string.Empty : row["IB_AGENT_CD"].ToString(),
                Ib_expo_cnty = row["IB_EXPO_CNTY"] == DBNull.Value ? string.Empty : row["IB_EXPO_CNTY"].ToString(),
                Ib_origin_cnty = row["IB_ORIGIN_CNTY"] == DBNull.Value ? string.Empty : row["IB_ORIGIN_CNTY"].ToString(),
                Ib_desti_cnty = row["IB_DESTI_CNTY"] == DBNull.Value ? string.Empty : row["IB_DESTI_CNTY"].ToString(),
                Ib_tot_pkg = row["IB_TOT_PKG"] == DBNull.Value ? string.Empty : row["IB_TOT_PKG"].ToString(),
                Ib_pack_lst_no = row["IB_PACK_LST_NO"] == DBNull.Value ? string.Empty : row["IB_PACK_LST_NO"].ToString(),
                Ib_vessel_no = row["IB_VESSEL_NO"] == DBNull.Value ? string.Empty : row["IB_VESSEL_NO"].ToString(),
                Ib_voyage = row["IB_VOYAGE"] == DBNull.Value ? string.Empty : row["IB_VOYAGE"].ToString(),
                Ib_loading_place = row["IB_LOADING_PLACE"] == DBNull.Value ? string.Empty : row["IB_LOADING_PLACE"].ToString(),
                Ib_frm_port = row["IB_FRM_PORT"] == DBNull.Value ? string.Empty : row["IB_FRM_PORT"].ToString(),
                Ib_to_port = row["IB_TO_PORT"] == DBNull.Value ? string.Empty : row["IB_TO_PORT"].ToString(),
                Ib_etd = row["IB_ETD"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["IB_ETD"].ToString()),
                Ib_eta = row["IB_ETA"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["IB_ETA"].ToString()),
                Ib_cur_cd = row["IB_CUR_CD"] == DBNull.Value ? string.Empty : row["IB_CUR_CD"].ToString(),
                Ib_ex_rt = row["IB_EX_RT"] == DBNull.Value ? 0 : Convert.ToDecimal(row["IB_EX_RT"].ToString()),
                Ib_tot_bl_amt = row["IB_TOT_BL_AMT"] == DBNull.Value ? 0 : Convert.ToDecimal(row["IB_TOT_BL_AMT"].ToString()),
                Ib_loc_of_goods = row["IB_LOC_OF_GOODS"] == DBNull.Value ? string.Empty : row["IB_LOC_OF_GOODS"].ToString(),
                Ib_doc_clear_dt = row["IB_DOC_CLEAR_DT"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["IB_DOC_CLEAR_DT"].ToString()),
                Ib_doc_rec_dt = row["IB_DOC_REC_DT"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["IB_DOC_REC_DT"].ToString()),
                Ib_ignore = row["IB_IGNORE"] == DBNull.Value ? 0 : Convert.ToInt32(row["IB_IGNORE"].ToString()),
                Ib_anal_1 = row["IB_ANAL_1"] == DBNull.Value ? string.Empty : row["IB_ANAL_1"].ToString(),
                Ib_anal_2 = row["IB_ANAL_2"] == DBNull.Value ? string.Empty : row["IB_ANAL_2"].ToString(),
                Ib_anal_3 = row["IB_ANAL_3"] == DBNull.Value ? string.Empty : row["IB_ANAL_3"].ToString(),
                Ib_anal_4 = row["IB_ANAL_4"] == DBNull.Value ? string.Empty : row["IB_ANAL_4"].ToString(),
                Ib_entry_no = row["Ib_entry_no"] == DBNull.Value ? string.Empty : row["Ib_entry_no"].ToString(),
                Ib_stus = row["IB_STUS"] == DBNull.Value ? string.Empty : row["IB_STUS"].ToString(),
                Ib_cre_by = row["IB_CRE_BY"] == DBNull.Value ? string.Empty : row["IB_CRE_BY"].ToString(),
                Ib_cre_dt = row["IB_CRE_DT"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["IB_CRE_DT"].ToString()),
                Ib_mod_by = row["IB_MOD_BY"] == DBNull.Value ? string.Empty : row["IB_MOD_BY"].ToString(),
                Ib_mod_dt = row["IB_MOD_DT"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["IB_MOD_DT"].ToString()),
                Ib_session_id = row["IB_SESSION_ID"] == DBNull.Value ? string.Empty : row["IB_SESSION_ID"].ToString(),

                Ib_doc_hnd_dt = row["Ib_doc_hnd_dt"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["Ib_doc_hnd_dt"].ToString()),
                Ib_cusdec_entryno = row["Ib_cusdec_entryno"] == DBNull.Value ? string.Empty : row["Ib_cusdec_entryno"].ToString(),
                Ib_act_eta = row["Ib_act_eta"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["Ib_act_eta"].ToString()),
                Ib_bl_ref_no = row["Ib_bl_ref_no"] == DBNull.Value ? string.Empty : row["Ib_bl_ref_no"].ToString(),

                Ib_tos = row["Ib_tos"] == DBNull.Value ? string.Empty : row["Ib_tos"].ToString(),
                Ib_carry_tp = row["Ib_carry_tp"] == DBNull.Value ? string.Empty : row["Ib_carry_tp"].ToString(),
                Ib_si_seq_no = row["Ib_si_seq_no"] == DBNull.Value ? 0 : Convert.ToInt32(row["Ib_si_seq_no"].ToString()),

                Ib_gurr_no = row["ib_gurr_no"] == DBNull.Value ? string.Empty : row["ib_gurr_no"].ToString(),
                Ib_issue_date = row["ib_issue_dt"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["ib_issue_dt"].ToString()),
                Ib_ex_date = row["ib_ex_dt"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["ib_ex_dt"].ToString()),
                Ib_cancel_date = row["ib_cancel_dt"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["ib_cancel_dt"].ToString()),
                Ib_is_cancel = row["ib_is_cancel"] == DBNull.Value ? false : Convert.ToBoolean(row["ib_is_cancel"]),
                Ib_mfile_no = row["Ib_mfile_no"] == DBNull.Value ? string.Empty : row["Ib_mfile_no"].ToString()
            };
        }
        public static ImportsBLHeader Converter2(DataRow row)
        {
            return new ImportsBLHeader
            {
                Ib_seq_no = row["IB_SEQ_NO"] == DBNull.Value ? 0 : Convert.ToInt32(row["IB_SEQ_NO"].ToString()),
                Ib_com = row["IB_COM"] == DBNull.Value ? string.Empty : row["IB_COM"].ToString(),
                Ib_sbu = row["IB_SBU"] == DBNull.Value ? string.Empty : row["IB_SBU"].ToString(),
                Ib_doc_no = row["IB_DOC_NO"] == DBNull.Value ? string.Empty : row["IB_DOC_NO"].ToString(),
                Ib_bl_no = row["IB_BL_NO"] == DBNull.Value ? string.Empty : row["IB_BL_NO"].ToString(),
                Ib_bl_dt = row["IB_BL_DT"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["IB_BL_DT"].ToString()),

                Ib_clear_pty = row["IB_CLEAR_PTY"] == DBNull.Value ? false : Convert.ToBoolean(row["IB_CLEAR_PTY"]),

                Ib_is_cusdec = row["IB_IS_CUSDEC"] == DBNull.Value ? 0 : Convert.ToInt32(row["IB_IS_CUSDEC"].ToString()),

                Ib_tot_foc = row["IB_TOT_FOC"] == DBNull.Value ? false : Convert.ToBoolean(row["IB_TOT_FOC"]),

                Ib_ref_no = row["IB_REF_NO"] == DBNull.Value ? string.Empty : row["IB_REF_NO"].ToString(),
                Ib_rmk = row["IB_RMK"] == DBNull.Value ? string.Empty : row["IB_RMK"].ToString(),
                Ib_mbl_no = row["IB_MBL_NO"] == DBNull.Value ? string.Empty : row["IB_MBL_NO"].ToString(),
                Ib_supp_tp = row["IB_SUPP_TP"] == DBNull.Value ? string.Empty : row["IB_SUPP_TP"].ToString(),
                Ib_supp_cd = row["IB_SUPP_CD"] == DBNull.Value ? string.Empty : row["IB_SUPP_CD"].ToString(),
                Ib_consi_cd = row["IB_CONSI_CD"] == DBNull.Value ? string.Empty : row["IB_CONSI_CD"].ToString(),
                Ib_decl_cd = row["IB_DECL_CD"] == DBNull.Value ? string.Empty : row["IB_DECL_CD"].ToString(),
                Ib_agent_tp = row["IB_AGENT_TP"] == DBNull.Value ? string.Empty : row["IB_AGENT_TP"].ToString(),
                Ib_agent_cd = row["IB_AGENT_CD"] == DBNull.Value ? string.Empty : row["IB_AGENT_CD"].ToString(),
                Ib_expo_cnty = row["IB_EXPO_CNTY"] == DBNull.Value ? string.Empty : row["IB_EXPO_CNTY"].ToString(),
                Ib_origin_cnty = row["IB_ORIGIN_CNTY"] == DBNull.Value ? string.Empty : row["IB_ORIGIN_CNTY"].ToString(),
                Ib_desti_cnty = row["IB_DESTI_CNTY"] == DBNull.Value ? string.Empty : row["IB_DESTI_CNTY"].ToString(),
                Ib_tot_pkg = row["IB_TOT_PKG"] == DBNull.Value ? string.Empty : row["IB_TOT_PKG"].ToString(),
                Ib_pack_lst_no = row["IB_PACK_LST_NO"] == DBNull.Value ? string.Empty : row["IB_PACK_LST_NO"].ToString(),
                Ib_vessel_no = row["IB_VESSEL_NO"] == DBNull.Value ? string.Empty : row["IB_VESSEL_NO"].ToString(),
                Ib_voyage = row["IB_VOYAGE"] == DBNull.Value ? string.Empty : row["IB_VOYAGE"].ToString(),
                Ib_loading_place = row["IB_LOADING_PLACE"] == DBNull.Value ? string.Empty : row["IB_LOADING_PLACE"].ToString(),
                Ib_frm_port = row["IB_FRM_PORT"] == DBNull.Value ? string.Empty : row["IB_FRM_PORT"].ToString(),
                Ib_to_port = row["IB_TO_PORT"] == DBNull.Value ? string.Empty : row["IB_TO_PORT"].ToString(),
                Ib_etd = row["IB_ETD"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["IB_ETD"].ToString()),
                Ib_eta = row["IB_ETA"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["IB_ETA"].ToString()),
                Ib_cur_cd = row["IB_CUR_CD"] == DBNull.Value ? string.Empty : row["IB_CUR_CD"].ToString(),
                Ib_ex_rt = row["IB_EX_RT"] == DBNull.Value ? 0 : Convert.ToDecimal(row["IB_EX_RT"].ToString()),
                Ib_tot_bl_amt = row["IB_TOT_BL_AMT"] == DBNull.Value ? 0 : Convert.ToDecimal(row["IB_TOT_BL_AMT"].ToString()),
                Ib_loc_of_goods = row["IB_LOC_OF_GOODS"] == DBNull.Value ? string.Empty : row["IB_LOC_OF_GOODS"].ToString(),
                Ib_doc_clear_dt = row["IB_DOC_CLEAR_DT"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["IB_DOC_CLEAR_DT"].ToString()),
                Ib_doc_rec_dt = row["IB_DOC_REC_DT"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["IB_DOC_REC_DT"].ToString()),
                Ib_ignore = row["IB_IGNORE"] == DBNull.Value ? 0 : Convert.ToInt32(row["IB_IGNORE"].ToString()),
                Ib_anal_1 = row["IB_ANAL_1"] == DBNull.Value ? string.Empty : row["IB_ANAL_1"].ToString(),
                Ib_anal_2 = row["IB_ANAL_2"] == DBNull.Value ? string.Empty : row["IB_ANAL_2"].ToString(),
                Ib_anal_3 = row["IB_ANAL_3"] == DBNull.Value ? string.Empty : row["IB_ANAL_3"].ToString(),
                Ib_anal_4 = row["IB_ANAL_4"] == DBNull.Value ? string.Empty : row["IB_ANAL_4"].ToString(),
                Ib_entry_no = row["Ib_entry_no"] == DBNull.Value ? string.Empty : row["Ib_entry_no"].ToString(),
                Ib_stus = row["IB_STUS"] == DBNull.Value ? string.Empty : row["IB_STUS"].ToString(),
                Ib_cre_by = row["IB_CRE_BY"] == DBNull.Value ? string.Empty : row["IB_CRE_BY"].ToString(),
                Ib_cre_dt = row["IB_CRE_DT"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["IB_CRE_DT"].ToString()),
                Ib_mod_by = row["IB_MOD_BY"] == DBNull.Value ? string.Empty : row["IB_MOD_BY"].ToString(),
                Ib_mod_dt = row["IB_MOD_DT"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["IB_MOD_DT"].ToString()),
                Ib_session_id = row["IB_SESSION_ID"] == DBNull.Value ? string.Empty : row["IB_SESSION_ID"].ToString(),

                Ib_doc_hnd_dt = row["Ib_doc_hnd_dt"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["Ib_doc_hnd_dt"].ToString()),
                Ib_cusdec_entryno = row["Ib_cusdec_entryno"] == DBNull.Value ? string.Empty : row["Ib_cusdec_entryno"].ToString(),
                Ib_act_eta = row["Ib_act_eta"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["Ib_act_eta"].ToString()),
                Ib_bl_ref_no = row["Ib_bl_ref_no"] == DBNull.Value ? string.Empty : row["Ib_bl_ref_no"].ToString(),

                Ib_tos = row["Ib_tos"] == DBNull.Value ? string.Empty : row["Ib_tos"].ToString(),
                Ib_carry_tp = row["Ib_carry_tp"] == DBNull.Value ? string.Empty : row["Ib_carry_tp"].ToString(),
                Ib_si_seq_no = row["Ib_si_seq_no"] == DBNull.Value ? 0 : Convert.ToInt32(row["Ib_si_seq_no"].ToString()),

                Ib_gurr_no = row["ib_gurr_no"] == DBNull.Value ? string.Empty : row["ib_gurr_no"].ToString(),
                Ib_issue_date = row["ib_issue_dt"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["ib_issue_dt"].ToString()),
                Ib_ex_date = row["ib_ex_dt"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["ib_ex_dt"].ToString()),
                Ib_cancel_date = row["ib_cancel_dt"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["ib_cancel_dt"].ToString()),
                Ib_is_cancel = row["ib_is_cancel"] == DBNull.Value ? false : Convert.ToBoolean(row["ib_is_cancel"]),
                Ib_mfile_no = row["Ib_mfile_no"] == DBNull.Value ? string.Empty : row["Ib_mfile_no"].ToString(),
                //Add by lakshan 25Dec2017
                IB_CREDALOW_DT = row["IB_CREDALOW_DT"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["IB_CREDALOW_DT"].ToString()),
                Ib_loc_cd = row["Ib_loc_cd"] == DBNull.Value ? string.Empty : row["Ib_loc_cd"].ToString(),
            };
        }
    }
}

