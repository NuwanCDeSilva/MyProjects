using System; 
using System.Data; 

namespace FF.BusinessObjects 
{

//===========================================================================================================
// This code is generated by Code gen V.1 
// All rights reserved.
// Suneththaraka02@gmail.com 
// Computer :- ITPD14  | User :- sahanj On 03-Jul-2015 11:28:03
//===========================================================================================================

public class OrderPlanKitItem 
{
public Int32 IOK_SEQ_NO   { get; set; } 
public String IOK_OP_NO   { get; set; } 
public Int32 IOK_LINE   { get; set; } 
public Int32 IOK_REF_LINE   { get; set; } 
public Int32 IOK_F_LINE   { get; set; } 
public Int32 IOK_STUS   { get; set; } 
public String IOK_ITM_CD   { get; set; } 
public String IOK_ITM_STUS   { get; set; } 
public Decimal IOK_QTY   { get; set; }
public Decimal IOK_BAL_QTY { get; set; } 
public String IOK_UOM   { get; set; } 
public Decimal IOK_UNIT_RT   { get; set; }
public Decimal IOK_PI_QTY { get; set; } 
public String IOK_CRE_BY   { get; set; } 
public DateTime IOK_CRE_DT   { get; set; } 
public String IOK_MOD_BY   { get; set; } 
public DateTime IOK_MOD_DT   { get; set; } 
public static OrderPlanKitItem Converter(DataRow row)  
{ 
return new OrderPlanKitItem 
{ 
IOK_SEQ_NO = row["IOK_SEQ_NO"] == DBNull.Value ? 0 : Convert.ToInt32(row["IOK_SEQ_NO"].ToString()), 
IOK_OP_NO = row["IOK_OP_NO"] == DBNull.Value ? string.Empty : row["IOK_OP_NO"].ToString(), 
IOK_LINE = row["IOK_LINE"] == DBNull.Value ? 0 : Convert.ToInt32(row["IOK_LINE"].ToString()), 
IOK_REF_LINE = row["IOK_REF_LINE"] == DBNull.Value ? 0 : Convert.ToInt32(row["IOK_REF_LINE"].ToString()), 
IOK_F_LINE = row["IOK_F_LINE"] == DBNull.Value ? 0 : Convert.ToInt32(row["IOK_F_LINE"].ToString()), 
IOK_STUS = row["IOK_STUS"] == DBNull.Value ? 0 : Convert.ToInt32(row["IOK_STUS"].ToString()), 
IOK_ITM_CD = row["IOK_ITM_CD"] == DBNull.Value ? string.Empty : row["IOK_ITM_CD"].ToString(), 
IOK_ITM_STUS = row["IOK_ITM_STUS"] == DBNull.Value ? string.Empty : row["IOK_ITM_STUS"].ToString(), 
IOK_QTY = row["IOK_QTY"] == DBNull.Value ? 0 : Convert.ToDecimal(row["IOK_QTY"].ToString()),
IOK_BAL_QTY = row["IOK_BAL_QTY"] == DBNull.Value ? 0 : Convert.ToDecimal(row["IOK_BAL_QTY"].ToString()), 
IOK_UOM = row["IOK_UOM"] == DBNull.Value ? string.Empty : row["IOK_UOM"].ToString(), 
IOK_UNIT_RT = row["IOK_UNIT_RT"] == DBNull.Value ? 0 : Convert.ToDecimal(row["IOK_UNIT_RT"].ToString()),
IOK_PI_QTY = row["IOK_PI_QTY"] == DBNull.Value ? 0 : Convert.ToDecimal(row["IOK_PI_QTY"].ToString()), 
IOK_CRE_BY = row["IOK_CRE_BY"] == DBNull.Value ? string.Empty : row["IOK_CRE_BY"].ToString(), 
IOK_CRE_DT = row["IOK_CRE_DT"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["IOK_CRE_DT"].ToString()), 
IOK_MOD_BY = row["IOK_MOD_BY"] == DBNull.Value ? string.Empty : row["IOK_MOD_BY"].ToString(), 
IOK_MOD_DT = row["IOK_MOD_DT"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["IOK_MOD_DT"].ToString())}; 
} 
} 
} 

