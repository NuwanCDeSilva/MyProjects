using System;
using System.Data;

namespace FF.BusinessObjects
{
    //===========================================================================================================
    // This code is generated by Code gen V.1 
    // Computer :- ITPD11  | User :- suneth On 13-Mar-2015 12:06:22
    //===========================================================================================================

    public class QUO_COST_DET
    {
        public Int32 QCD_SEQ { get; set; }
        public String QCD_COST_NO { get; set; }
        public String QCD_CAT { get; set; }
        public String QCD_SUB_CATE { get; set; }
        public String QCD_DESC { get; set; }
        public String QCD_CURR { get; set; }
        public Decimal QCD_EX_RATE { get; set; }
        public Decimal QCD_QTY { get; set; }
        public Decimal QCD_UNIT_COST { get; set; }
        public Decimal QCD_TAX { get; set; }
        public Decimal QCD_TOT_COST { get; set; }
        public Decimal QCD_TOT_LOCAL { get; set; }
        public Decimal QCD_MARKUP { get; set; }
        public Decimal QCD_MARKUP_AMT { get; set; }
        public Decimal QCD_AF_MARKUP { get; set; }
        public String QCD_RMK { get; set; }
        public String QCD_ANAL1 { get; set; }
        public String QCD_ANAL2 { get; set; }
        public String QCD_ANAL3 { get; set; }
        public String QCD_ANAL4 { get; set; }
        public Int32 QCD_ANAL5 { get; set; }
        public Int32 QCD_ANAL6 { get; set; }
        public Int32 QCD_ANAL7 { get; set; }
        public DateTime QCD_ANAL8 { get; set; }
        public String QCD_CRE_BY { get; set; }
        public DateTime QCD_CRE_DT { get; set; }
        public String QCD_MOD_BY { get; set; }
        public DateTime QCD_MOD_DT { get; set; }
        public Int32 QCD_STATUS { get; set; }

        public int LocalSeq { get; set; }

        public static QUO_COST_DET Converter(DataRow row)
        {
            return new QUO_COST_DET
            {
                QCD_SEQ = row["QCD_SEQ"] == DBNull.Value ? 0 : Convert.ToInt32(row["QCD_SEQ"].ToString()),
                QCD_COST_NO = row["QCD_COST_NO"] == DBNull.Value ? string.Empty : row["QCD_COST_NO"].ToString(),
                QCD_CAT = row["QCD_CAT"] == DBNull.Value ? string.Empty : row["QCD_CAT"].ToString(),
                QCD_SUB_CATE = row["QCD_SUB_CATE"] == DBNull.Value ? string.Empty : row["QCD_SUB_CATE"].ToString(),
                QCD_DESC = row["QCD_DESC"] == DBNull.Value ? string.Empty : row["QCD_DESC"].ToString(),
                QCD_CURR = row["QCD_CURR"] == DBNull.Value ? string.Empty : row["QCD_CURR"].ToString(),
                QCD_EX_RATE = row["QCD_EX_RATE"] == DBNull.Value ? 0 : Convert.ToDecimal(row["QCD_EX_RATE"].ToString()),
                QCD_QTY = row["QCD_QTY"] == DBNull.Value ? 0 : Convert.ToDecimal(row["QCD_QTY"].ToString()),
                QCD_UNIT_COST = row["QCD_UNIT_COST"] == DBNull.Value ? 0 : Convert.ToDecimal(row["QCD_UNIT_COST"].ToString()),
                QCD_TAX = row["QCD_TAX"] == DBNull.Value ? 0 : Convert.ToDecimal(row["QCD_TAX"].ToString()),
                QCD_TOT_COST = row["QCD_TOT_COST"] == DBNull.Value ? 0 : Convert.ToDecimal(row["QCD_TOT_COST"].ToString()),
                QCD_TOT_LOCAL = row["QCD_TOT_LOCAL"] == DBNull.Value ? 0 : Convert.ToDecimal(row["QCD_TOT_LOCAL"].ToString()),
                QCD_MARKUP = row["QCD_MARKUP"] == DBNull.Value ? 0 : Convert.ToDecimal(row["QCD_MARKUP"].ToString()),
                QCD_MARKUP_AMT = row["QCD_MARKUP_AMT"] == DBNull.Value ? 0 : Convert.ToDecimal(row["QCD_MARKUP_AMT"].ToString()),
                QCD_AF_MARKUP = row["QCD_AF_MARKUP"] == DBNull.Value ? 0 : Convert.ToDecimal(row["QCD_AF_MARKUP"].ToString()),
                QCD_RMK = row["QCD_RMK"] == DBNull.Value ? string.Empty : row["QCD_RMK"].ToString(),
                QCD_ANAL1 = row["QCD_ANAL1"] == DBNull.Value ? string.Empty : row["QCD_ANAL1"].ToString(),
                QCD_ANAL2 = row["QCD_ANAL2"] == DBNull.Value ? string.Empty : row["QCD_ANAL2"].ToString(),
                QCD_ANAL3 = row["QCD_ANAL3"] == DBNull.Value ? string.Empty : row["QCD_ANAL3"].ToString(),
                QCD_ANAL4 = row["QCD_ANAL4"] == DBNull.Value ? string.Empty : row["QCD_ANAL4"].ToString(),
                QCD_ANAL5 = row["QCD_ANAL5"] == DBNull.Value ? 0 : Convert.ToInt32(row["QCD_ANAL5"].ToString()),
                QCD_ANAL6 = row["QCD_ANAL6"] == DBNull.Value ? 0 : Convert.ToInt32(row["QCD_ANAL6"].ToString()),
                QCD_ANAL7 = row["QCD_ANAL7"] == DBNull.Value ? 0 : Convert.ToInt32(row["QCD_ANAL7"].ToString()),
                QCD_ANAL8 = row["QCD_ANAL8"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["QCD_ANAL8"].ToString()),
                QCD_CRE_BY = row["QCD_CRE_BY"] == DBNull.Value ? string.Empty : row["QCD_CRE_BY"].ToString(),
                QCD_CRE_DT = row["QCD_CRE_DT"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["QCD_CRE_DT"].ToString()),
                QCD_MOD_BY = row["QCD_MOD_BY"] == DBNull.Value ? string.Empty : row["QCD_MOD_BY"].ToString(),
                QCD_MOD_DT = row["QCD_MOD_DT"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["QCD_MOD_DT"].ToString()),
                QCD_STATUS = row["QCD_STATUS"] == DBNull.Value ? 0 : Convert.ToInt32(row["QCD_STATUS"].ToString())
            };
        }
    }
}

