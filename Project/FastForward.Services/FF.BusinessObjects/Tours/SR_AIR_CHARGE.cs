using System;
using System.Data;

namespace FF.BusinessObjects
{
    //===========================================================================================================
    // This code is generated by Code gen V.1 
    // Computer :- ITPD11  | User :- suneth On 31-Mar-2015 03:49:05
    //===========================================================================================================

    public class SR_AIR_CHARGE
    {
        public Int32 SAC_SEQ { get; set; }
        public String SAC_COM { get; set; }
        public String SAC_SCV_BY { get; set; }
        public String SAC_CATE { get; set; }
        public String SAC_CD { get; set; }
        public String SAC_CLS { get; set; }
        public DateTime SAC_FRM_DT { get; set; }
        public DateTime SAC_TO_DT { get; set; }
        public String SAC_TIC_DESC { get; set; }
        public String SAC_ADD_DESC { get; set; }
        public String SAC_FROM { get; set; }
        public String SAC_TO { get; set; }
        public Decimal SAC_RT { get; set; }
        public String SAC_CUR { get; set; }
        public Int32 SAC_IS_CHILD { get; set; }
        public String SAC_TP { get; set; }
        public String SAC_CRE_BY { get; set; }
        public DateTime SAC_CRE_DT { get; set; }
        public String SAC_MOD_BY { get; set; }
        public DateTime SAC_MOD_DT { get; set; }
        public Int32 SAC_ACT { get; set; }
        public decimal SAC_TAX_RT { get; set; }
        public string  SAC_PC { get; set; }
        public string SAC_TCKT_TP { get; set; }
        public static SR_AIR_CHARGE Converter(DataRow row)
        {
            return new SR_AIR_CHARGE
            {
                SAC_SEQ = row["SAC_SEQ"] == DBNull.Value ? 0 : Convert.ToInt32(row["SAC_SEQ"].ToString()),
                SAC_COM = row["SAC_COM"] == DBNull.Value ? string.Empty : row["SAC_COM"].ToString(),
                SAC_SCV_BY = row["SAC_SCV_BY"] == DBNull.Value ? string.Empty : row["SAC_SCV_BY"].ToString(),
                SAC_CATE = row["SAC_CATE"] == DBNull.Value ? string.Empty : row["SAC_CATE"].ToString(),
                SAC_CD = row["SAC_CD"] == DBNull.Value ? string.Empty : row["SAC_CD"].ToString(),
                SAC_CLS = row["SAC_CLS"] == DBNull.Value ? string.Empty : row["SAC_CLS"].ToString(),
                SAC_FRM_DT = row["SAC_FRM_DT"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["SAC_FRM_DT"].ToString()),
                SAC_TO_DT = row["SAC_TO_DT"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["SAC_TO_DT"].ToString()),
                SAC_TIC_DESC = row["SAC_TIC_DESC"] == DBNull.Value ? string.Empty : row["SAC_TIC_DESC"].ToString(),
                SAC_ADD_DESC = row["SAC_ADD_DESC"] == DBNull.Value ? string.Empty : row["SAC_ADD_DESC"].ToString(),
                SAC_FROM = row["SAC_FROM"] == DBNull.Value ? string.Empty : row["SAC_FROM"].ToString(),
                SAC_TO = row["SAC_TO"] == DBNull.Value ? string.Empty : row["SAC_TO"].ToString(),
                SAC_RT = row["SAC_RT"] == DBNull.Value ? 0 : Convert.ToDecimal(row["SAC_RT"].ToString()),
                SAC_CUR = row["SAC_CUR"] == DBNull.Value ? string.Empty : row["SAC_CUR"].ToString(),
                SAC_IS_CHILD = row["SAC_IS_CHILD"] == DBNull.Value ? 0 : Convert.ToInt32(row["SAC_IS_CHILD"].ToString()),
                SAC_TP = row["SAC_TP"] == DBNull.Value ? string.Empty : row["SAC_TP"].ToString(),
                SAC_CRE_BY = row["SAC_CRE_BY"] == DBNull.Value ? string.Empty : row["SAC_CRE_BY"].ToString(),
                SAC_CRE_DT = row["SAC_CRE_DT"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["SAC_CRE_DT"].ToString()),
                SAC_MOD_BY = row["SAC_MOD_BY"] == DBNull.Value ? string.Empty : row["SAC_MOD_BY"].ToString(),
                SAC_MOD_DT = row["SAC_MOD_DT"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["SAC_MOD_DT"].ToString()),
                SAC_ACT = row["SAC_ACT"] == DBNull.Value ? 0 : Convert.ToInt32(row["SAC_ACT"].ToString()),
                SAC_TAX_RT = row["SAC_TAX_RT"] == DBNull.Value ? 0 : Convert.ToDecimal(row["SAC_TAX_RT"].ToString()),
                SAC_PC = row["SAC_PC"] == DBNull.Value ? string.Empty : row["SAC_PC"].ToString(),
                SAC_TCKT_TP = row["SAC_TCKT_TP"] == DBNull.Value ? string.Empty : row["SAC_TCKT_TP"].ToString()
            };
        }

        public static SR_AIR_CHARGE Converter2(DataRow row)
        {
            return new SR_AIR_CHARGE
            {
                SAC_SCV_BY = row["SAC_SCV_BY"] == DBNull.Value ? string.Empty : row["SAC_SCV_BY"].ToString(),
                SAC_CLS = row["SAC_CLS"] == DBNull.Value ? string.Empty : row["SAC_CLS"].ToString(),
                SAC_FRM_DT = row["SAC_FRM_DT"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["SAC_FRM_DT"].ToString()),
                SAC_TO_DT = row["SAC_TO_DT"] == DBNull.Value ? DateTime.MinValue : Convert.ToDateTime(row["SAC_TO_DT"].ToString()),
                SAC_FROM = row["SAC_FROM"] == DBNull.Value ? string.Empty : row["SAC_FROM"].ToString(),
                SAC_TO = row["SAC_TO"] == DBNull.Value ? string.Empty : row["SAC_TO"].ToString(),
                SAC_CUR = row["SAC_CUR"] == DBNull.Value ? string.Empty : row["SAC_CUR"].ToString(),
                SAC_RT = row["SAC_RT"] == DBNull.Value ? 0 : Convert.ToDecimal(row["SAC_RT"].ToString()),
                SAC_TIC_DESC = row["SAC_TIC_DESC"] == DBNull.Value ? string.Empty : row["SAC_TIC_DESC"].ToString(),
                SAC_ADD_DESC = row["SAC_ADD_DESC"] == DBNull.Value ? string.Empty : row["SAC_ADD_DESC"].ToString(),
            };
        }

    }
}

